1 + 0:4 * 5
5*0:4 , 24
c(5*0:4 , 24)
c(1, 5*0:4 , 24)
c(1, 5*1:4 , 24)
x <- 47852
character(X)
character(x)
x
as.character(x)
strsplit(as.character(x),
strsplit(as.character(x),'')
strsplit(as.character(x),'')[[1]]
set.seed(1)
x <- rnorm(200, mean = 2, sd = sqrt(3))
hist(x, probability = TRUE, 20,
col = 'grey90', xlab = 'x', main = '')
lines(density(x, .2), lty = 1, lwd = 2,
xlab = 'x', main = '')
lines(density(x, 2.1), lty = 2, lwd = 2)
lines(density(x, .8), lty = 1, lwd = 3)
box()
legend('topleft', bty = 'n',
lwd = c(2,4,2), lty = c(1,1,2),
legend = c('h = 0.2','h = 0.8','h = 2.1'))
bw.SJ(x)
set.seed(1)
x <- rnorm(200, mean = 2, sd = sqrt(3))
hist(x, probability = TRUE, 20,
col = 'grey90', xlab = 'x', main = '')
lines(density(x, .2), lty = 1, lwd = 2,
xlab = 'x', main = '')
lines(density(x, 2.1), lty = 2, lwd = 2)
lines(density(x, .6), lty = 1, lwd = 3)
box()
legend('topleft', bty = 'n',
lwd = c(2,4,2), lty = c(1,1,2),
legend = c('h = 0.2','h = 0.6','h = 2.1'))
mean(rgamma(1000, shape = 1, scale = 20))
mean(rgamma(1000, shape = 4, scale = 5))
?density
library(rsconnect)
?deployApp
deployApp('c:/users/brad/desktop/stat 771/project/KDEShinyApp')
?rgeom
rgeom(10, .5)
rgeom(10, .5)
rgeom(10, .5)
hist(rgeom(1e7, .5))
x <- rgeom(1e6, .5)
mean(x)
table(x)
sort(table(x) )
do.call(table(x)
do.call('cbind', table(x))
stack(table(x))
.5 + .25
t_x <- stack(table(x))
rm(x)
sum(t_x[-c(1,2), 1])
sum(t_x[-c(1,2), 1]) / sum(t_x[,1])
?pgeom
pgeom(1, .5)
library(ggplot2)
head(mtcars)
ggplot(mtcars, aes(x = cyl, y = mpg, fill = vs))+
geom_bar(stat = 'identity')
ggplot(mtcars, aes(x = cyl, y = mpg, fill = vs))+
geom_bar(stat = 'identity', position = 'stack')
ggplot(mtcars, aes(x = cyl, y = mpg, fill = factor(vs)))+
geom_bar(stat = 'identity', position = 'stack')
ggplot(mtcars, aes(x = cyl, y = mpg, fill = factor(vs)))+
geom_bar(stat = 'identity')
ggplot(mtcars, aes(x = cyl, y = mpg, fill = vs))+
geom_bar(stat = 'identity')
ls()
par(mar=rev(c(1, 1.5, 2, 1)), mfrow=c(1,2),
oma = rev(c(.1, .1, 2, 1)))
set.seed(1)
n <- 10
kCenter <- rnorm(n)
x <- seq(-5, 5, length.out = 500)
f <- fhat <- rep(0, length(x))
h <- 1.1 * (n)^(-1/5)
plot(0,0, pch = '', xlab = '', ylab = '',
xlim = c(-3, 3), ylim = c(0, .56),
main = 'KDE with Large Bandwidth'
)
for(i in 1:n){
f <- dnorm((x - kCenter[i]) / h) * (1/(n * h))
lines(x, f, col = 'blue', lty = 2)
fhat <- fhat + f
}
lines(x, fhat)
points(kCenter, rep(-.0101, n), col = 'red', pch = 2)
# set.seed(1)
# n <- 10
# kCenter <- rnorm(12)
# x <- seq(-5, 5, length.out = 500)
f <- fhat <- rep(0, length(x))
h <- .5 * (n)^(-1/5)
plot(0,0, pch = '', xlab = '', ylab = '',
xlim = c(-3, 3), ylim = c(0, .56),
main = 'KDE with Small Bandwidth'
)
for(i in 1:n){
f <- dnorm((x - kCenter[i]) / h) * (1/(n * h))
lines(x, f, col = 'blue', lty = 2)
fhat <- fhat + f
}
lines(x, fhat)
points(kCenter, rep(-.0101, n), col = 'red', pch = 2)
par(mar=rev(c(1, 1.5, 2, 1)), mfrow=c(1,2),
oma = rev(c(.1, .1, 2, 1)))
set.seed(1)
n <- 10
kCenter <- rnorm(n)
x <- seq(-5, 5, length.out = 500)
f <- fhat <- rep(0, length(x))
h <- 1.1 * (n)^(-1/5)
plot(0,0, pch = '', xlab = '', ylab = '',
xlim = c(-3, 3), ylim = c(0, .56),
main = 'KDE with Large Bandwidth',
lty = 2
)
for(i in 1:n){
f <- dnorm((x - kCenter[i]) / h) * (1/(n * h))
lines(x, f, col = 'blue', lty = 1)
fhat <- fhat + f
}
lines(x, fhat)
points(kCenter, rep(-.0101, n), col = 'red', pch = 2)
# set.seed(1)
# n <- 10
# kCenter <- rnorm(12)
# x <- seq(-5, 5, length.out = 500)
f <- fhat <- rep(0, length(x))
h <- .5 * (n)^(-1/5)
plot(0,0, pch = '', xlab = '', ylab = '',
xlim = c(-3, 3), ylim = c(0, .56),
main = 'KDE with Small Bandwidth',
lty = 2
)
for(i in 1:n){
f <- dnorm((x - kCenter[i]) / h) * (1/(n * h))
lines(x, f, col = 'blue', lty = 1)
fhat <- fhat + f
}
lines(x, fhat)
points(kCenter, rep(-.0101, n), col = 'red', pch = 2)
par(mar=rev(c(1, 1.5, 2, 1)), mfrow=c(1,2),
oma = rev(c(.1, .1, 2, 1)))
set.seed(1)
n <- 10
kCenter <- rnorm(n)
x <- seq(-5, 5, length.out = 500)
f <- fhat <- rep(0, length(x))
h <- 1.1 * (n)^(-1/5)
plot(0,0, pch = '', xlab = '', ylab = '',
xlim = c(-3, 3), ylim = c(0, .56),
main = 'KDE with Large Bandwidth',
lty = 2
)
for(i in 1:n){
f <- dnorm((x - kCenter[i]) / h) * (1/(n * h))
lines(x, f, col = 'blue', lty = 1)
fhat <- fhat + f
}
lines(x, fhat, lty = 2)
points(kCenter, rep(-.0101, n), col = 'red', pch = 2)
# set.seed(1)
# n <- 10
# kCenter <- rnorm(12)
# x <- seq(-5, 5, length.out = 500)
f <- fhat <- rep(0, length(x))
h <- .5 * (n)^(-1/5)
plot(0,0, pch = '', xlab = '', ylab = '',
xlim = c(-3, 3), ylim = c(0, .56),
main = 'KDE with Small Bandwidth'
)
for(i in 1:n){
f <- dnorm((x - kCenter[i]) / h) * (1/(n * h))
lines(x, f, col = 'blue', lty = 1)
fhat <- fhat + f
}
lines(x, fhat, lty = 2)
points(kCenter, rep(-.0101, n), col = 'red', pch = 2)
par(mar=rev(c(1, 1.5, 2, 1)), mfrow=c(1,2),
oma = rev(c(.1, .1, 2, 1)))
set.seed(1)
n <- 10
kCenter <- rnorm(n)
x <- seq(-5, 5, length.out = 500)
f <- fhat <- rep(0, length(x))
h <- 1.1 * (n)^(-1/5)
plot(0,0, pch = '', xlab = '', ylab = '',
xlim = c(-3, 3), ylim = c(0, .56),
main = 'KDE with Large Bandwidth',
lty = 2
)
for(i in 1:n){
f <- dnorm((x - kCenter[i]) / h) * (1/(n * h))
lines(x, f, col = 'blue')
fhat <- fhat + f
}
lines(x, fhat, lty = 2, lwd = 2)
points(kCenter, rep(-.0101, n), col = 'red', pch = 2)
# set.seed(1)
# n <- 10
# kCenter <- rnorm(12)
# x <- seq(-5, 5, length.out = 500)
f <- fhat <- rep(0, length(x))
h <- .5 * (n)^(-1/5)
plot(0,0, pch = '', xlab = '', ylab = '',
xlim = c(-3, 3), ylim = c(0, .56),
main = 'KDE with Small Bandwidth'
)
for(i in 1:n){
f <- dnorm((x - kCenter[i]) / h) * (1/(n * h))
lines(x, f, col = 'blue')
fhat <- fhat + f
}
lines(x, fhat, lty = 2, lwd = 2)
points(kCenter, rep(-.0101, n), col = 'red', pch = 2)
sample(c(rep(NA, 5), 1:10))
na.omit(sample(c(rep(NA, 5), 1:10)))
complete.cases(sample(c(rep(NA, 5), 1:10)))
complete.cases(x <- sample(c(rep(NA, 5), 1:10)))
x
na.exclude(x)
c(na.exclude(x))
seq
foo <- read.table('clipboard', sep = '\t', header = T)
head(foo)
foo
ncol(foo)
dim(foo)
foo
foo <- read.table('clipboard', sep = '\t', header = F)
foo
dim(foo)
head(fo)
read.table("
1      Damian Lillard POR 54.8 59.50 20161025
11      C.J. McCollum POR 30.9 32.50 20161025
16       Allen Crabbe POR 24.1 28.25 20161025
19        Noah Vonleh POR 14.2 15.25 20161025
22           Ed Davis POR 17.9 18.00 20161025
26    Al-Farouq Aminu POR 16.3 18.25 20161025
34        Evan Turner POR 20.5 19.25 20161025
64   Maurice Harkless POR  4.7  5.25 20161025
65     Meyers Leonard POR  2.7  2.25 20161025
68      Mason Plumlee POR  4.7  4.00 20161025
290  Maurice Harkless POR 35.6 35.75 20161027
295     Mason Plumlee POR 36.6 36.75 20161027
299    Damian Lillard POR 41.5 44.25 20161027
309     C.J. McCollum POR 26.8 27.50 20161027
318      Allen Crabbe POR 17.2 16.25 20161027
349       Noah Vonleh POR  5.0  4.75 20161027
358       Evan Turner POR 10.7 10.50 20161027
359          Ed Davis POR  5.6  5.50 20161027
364    Shabazz Napier POR  0.0  0.00 20161027
369   Al-Farouq Aminu POR 13.6 13.25 20161027
545    Damian Lillard POR 56.5 58.25 20161029
557     C.J. McCollum POR 49.5 51.25 20161029
610     Mason Plumlee POR 22.9 22.50 20161029
611      Allen Crabbe POR 22.6 22.75 20161029
637       Evan Turner POR 15.6 16.75 20161029
649   Al-Farouq Aminu POR 27.9 28.25 20161029
673          Ed Davis POR  8.9  9.50 20161029
704       Noah Vonleh POR  4.8  5.00 20161029
719  Maurice Harkless POR  9.6 11.00 20161029
723    Meyers Leonard POR  6.2  6.25 20161029
728    Shabazz Napier POR  0.0  0.00 20161029
")
read.table(text = "
1      Damian Lillard POR 54.8 59.50 20161025
11      C.J. McCollum POR 30.9 32.50 20161025
16       Allen Crabbe POR 24.1 28.25 20161025
19        Noah Vonleh POR 14.2 15.25 20161025
22           Ed Davis POR 17.9 18.00 20161025
26    Al-Farouq Aminu POR 16.3 18.25 20161025
34        Evan Turner POR 20.5 19.25 20161025
64   Maurice Harkless POR  4.7  5.25 20161025
65     Meyers Leonard POR  2.7  2.25 20161025
68      Mason Plumlee POR  4.7  4.00 20161025
290  Maurice Harkless POR 35.6 35.75 20161027
295     Mason Plumlee POR 36.6 36.75 20161027
299    Damian Lillard POR 41.5 44.25 20161027
309     C.J. McCollum POR 26.8 27.50 20161027
318      Allen Crabbe POR 17.2 16.25 20161027
349       Noah Vonleh POR  5.0  4.75 20161027
358       Evan Turner POR 10.7 10.50 20161027
359          Ed Davis POR  5.6  5.50 20161027
364    Shabazz Napier POR  0.0  0.00 20161027
369   Al-Farouq Aminu POR 13.6 13.25 20161027
545    Damian Lillard POR 56.5 58.25 20161029
557     C.J. McCollum POR 49.5 51.25 20161029
610     Mason Plumlee POR 22.9 22.50 20161029
611      Allen Crabbe POR 22.6 22.75 20161029
637       Evan Turner POR 15.6 16.75 20161029
649   Al-Farouq Aminu POR 27.9 28.25 20161029
673          Ed Davis POR  8.9  9.50 20161029
704       Noah Vonleh POR  4.8  5.00 20161029
719  Maurice Harkless POR  9.6 11.00 20161029
723    Meyers Leonard POR  6.2  6.25 20161029
728    Shabazz Napier POR  0.0  0.00 20161029
")
foo <- read.table(text = "
1      Damian Lillard POR 54.8 59.50 20161025
11      C.J. McCollum POR 30.9 32.50 20161025
16       Allen Crabbe POR 24.1 28.25 20161025
19        Noah Vonleh POR 14.2 15.25 20161025
22           Ed Davis POR 17.9 18.00 20161025
26    Al-Farouq Aminu POR 16.3 18.25 20161025
34        Evan Turner POR 20.5 19.25 20161025
64   Maurice Harkless POR  4.7  5.25 20161025
65     Meyers Leonard POR  2.7  2.25 20161025
68      Mason Plumlee POR  4.7  4.00 20161025
290  Maurice Harkless POR 35.6 35.75 20161027
295     Mason Plumlee POR 36.6 36.75 20161027
299    Damian Lillard POR 41.5 44.25 20161027
309     C.J. McCollum POR 26.8 27.50 20161027
318      Allen Crabbe POR 17.2 16.25 20161027
349       Noah Vonleh POR  5.0  4.75 20161027
358       Evan Turner POR 10.7 10.50 20161027
359          Ed Davis POR  5.6  5.50 20161027
364    Shabazz Napier POR  0.0  0.00 20161027
369   Al-Farouq Aminu POR 13.6 13.25 20161027
545    Damian Lillard POR 56.5 58.25 20161029
557     C.J. McCollum POR 49.5 51.25 20161029
610     Mason Plumlee POR 22.9 22.50 20161029
611      Allen Crabbe POR 22.6 22.75 20161029
637       Evan Turner POR 15.6 16.75 20161029
649   Al-Farouq Aminu POR 27.9 28.25 20161029
673          Ed Davis POR  8.9  9.50 20161029
704       Noah Vonleh POR  4.8  5.00 20161029
719  Maurice Harkless POR  9.6 11.00 20161029
723    Meyers Leonard POR  6.2  6.25 20161029
728    Shabazz Napier POR  0.0  0.00 20161029
")
head(foo)
foo <- foo[,-1]
head(foo)
foo[,2] <- paste(foo[,1], foo[,2])
foo
head(foo)
foo <- foo[,-1]
head(foo)
names(foo) <- c('PlayerName','TM','MB','DS', 'Game')
head(foo)
foo$PlayerName
foo$TM
foo$TM <- as.character(foo$TM)
foo$TM
summary(Fo)
summary(foo)
dput(foo)
head(foo)
dat <- foo
head(dat)
dat <- dat[,-c(2,4)]
head(dat)
?reshape
reshape(dat, direction = 'wide',idvar = 'PlayerName')
reshape(dat, direction = 'wide',idvar = 'PlayerName',
timevar = 'Game')
reshape(dat, direction = 'wide',idvar = 'Game',
timevar = 'PlayerName')
dat <- dat[,-c(2,4)]
dat.wide <- reshape(dat, direction = 'wide',idvar = 'Game',
timevar = 'PlayerName')
head(dat.wide)
dat.wide
dat
dat <- structure(list(PlayerName = c("Damian Lillard", "C.J. McCollum",
"Allen Crabbe", "Noah Vonleh", "Ed Davis", "Al-Farouq Aminu",
"Evan Turner", "Maurice Harkless", "Meyers Leonard", "Mason Plumlee",
"Maurice Harkless", "Mason Plumlee", "Damian Lillard", "C.J. McCollum",
"Allen Crabbe", "Noah Vonleh", "Evan Turner", "Ed Davis", "Shabazz Napier",
"Al-Farouq Aminu", "Damian Lillard", "C.J. McCollum", "Mason Plumlee",
"Allen Crabbe", "Evan Turner", "Al-Farouq Aminu", "Ed Davis",
"Noah Vonleh", "Maurice Harkless", "Meyers Leonard", "Shabazz Napier"
), TM = c("POR", "POR", "POR", "POR", "POR", "POR", "POR", "POR",
"POR", "POR", "POR", "POR", "POR", "POR", "POR", "POR", "POR",
"POR", "POR", "POR", "POR", "POR", "POR", "POR", "POR", "POR",
"POR", "POR", "POR", "POR", "POR"), MB = c(54.8, 30.9, 24.1,
14.2, 17.9, 16.3, 20.5, 4.7, 2.7, 4.7, 35.6, 36.6, 41.5, 26.8,
17.2, 5, 10.7, 5.6, 0, 13.6, 56.5, 49.5, 22.9, 22.6, 15.6, 27.9,
8.9, 4.8, 9.6, 6.2, 0), DS = c(59.5, 32.5, 28.25, 15.25, 18,
18.25, 19.25, 5.25, 2.25, 4, 35.75, 36.75, 44.25, 27.5, 16.25,
4.75, 10.5, 5.5, 0, 13.25, 58.25, 51.25, 22.5, 22.75, 16.75,
28.25, 9.5, 5, 11, 6.25, 0), Game = c(20161025L, 20161025L, 20161025L,
20161025L, 20161025L, 20161025L, 20161025L, 20161025L, 20161025L,
20161025L, 20161027L, 20161027L, 20161027L, 20161027L, 20161027L,
20161027L, 20161027L, 20161027L, 20161027L, 20161027L, 20161029L,
20161029L, 20161029L, 20161029L, 20161029L, 20161029L, 20161029L,
20161029L, 20161029L, 20161029L, 20161029L)), .Names = c("PlayerName",
"TM", "MB", "DS", "Game"), row.names = c(NA, -31L), class = "data.frame")
dat <- dat[,-c(2,4)]
dat.wide <- reshape(dat, direction = 'wide',idvar = 'Game',
timevar = 'PlayerName')
dat.wide
dat.wide[1:3,1:3]
var(dat.wide[,-1])
?var
var(dat.wide[,-1], use = 'pairwise.complete')
cor(dat.wide[,-1], use = 'pairwise.complete')
?cov
cov(dat.wide[,-1], use = 'pairwise.complete')
dat.wide[1:4, 1:4]
dat.wide[1:2, 1:4]
dat.wide[, 1:4]
dat <- structure(list(PlayerName = c("Damian Lillard", "C.J. McCollum",
"Allen Crabbe", "Noah Vonleh", "Ed Davis", "Al-Farouq Aminu",
"Evan Turner", "Maurice Harkless", "Meyers Leonard", "Mason Plumlee",
"Maurice Harkless", "Mason Plumlee", "Damian Lillard", "C.J. McCollum",
"Allen Crabbe", "Noah Vonleh", "Evan Turner", "Ed Davis", "Shabazz Napier",
"Al-Farouq Aminu", "Damian Lillard", "C.J. McCollum", "Mason Plumlee",
"Allen Crabbe", "Evan Turner", "Al-Farouq Aminu", "Ed Davis",
"Noah Vonleh", "Maurice Harkless", "Meyers Leonard", "Shabazz Napier"
), TM = c("POR", "POR", "POR", "POR", "POR", "POR", "POR", "POR",
"POR", "POR", "POR", "POR", "POR", "POR", "POR", "POR", "POR",
"POR", "POR", "POR", "POR", "POR", "POR", "POR", "POR", "POR",
"POR", "POR", "POR", "POR", "POR"), MB = c(54.8, 30.9, 24.1,
14.2, 17.9, 16.3, 20.5, 4.7, 2.7, 4.7, 35.6, 36.6, 41.5, 26.8,
17.2, 5, 10.7, 5.6, 0, 13.6, 56.5, 49.5, 22.9, 22.6, 15.6, 27.9,
8.9, 4.8, 9.6, 6.2, 0), DS = c(59.5, 32.5, 28.25, 15.25, 18,
18.25, 19.25, 5.25, 2.25, 4, 35.75, 36.75, 44.25, 27.5, 16.25,
4.75, 10.5, 5.5, 0, 13.25, 58.25, 51.25, 22.5, 22.75, 16.75,
28.25, 9.5, 5, 11, 6.25, 0), Game = c(20161025L, 20161025L, 20161025L,
20161025L, 20161025L, 20161025L, 20161025L, 20161025L, 20161025L,
20161025L, 20161027L, 20161027L, 20161027L, 20161027L, 20161027L,
20161027L, 20161027L, 20161027L, 20161027L, 20161027L, 20161029L,
20161029L, 20161029L, 20161029L, 20161029L, 20161029L, 20161029L,
20161029L, 20161029L, 20161029L, 20161029L)), .Names = c("PlayerName",
"TM", "MB", "DS", "Game"), row.names = c(NA, -31L), class = "data.frame")
dat[,3:4]
cor(dat[,3:4])
cov(t(dat[,3:4]))
cov(dat.wide[,-1], use = 'pairwise.complete')
cov_m <- cov(dat.wide[,-1], use = 'pairwise.complete')
cov_m[1:4,1:4]
x <- rnorm(10)
y <- (1 - .6) * x + (.6) * rnorm(10, 2)
plot(x,y)
cor(x, y)
y[1] <- NA
cor(x, y)
cor(x, y, use = 'pairwise')
names(dat)
names(dat[,-c(2,5)])
names(dat[,-c(2,4)])
?lowess
?loess
CustID <- c(112, 113, 112, 113, 114, 112, 113, 114, 112, 114, 114 )
TransID <- c('a1', 'ab1', 'a2', 'ab1', 'ae1', 'a1', 'ab2', 'ae2', 'a3', 'ae4', 'ae5')
ProductName <- c('phone', 'laptop', 'phone', 'camera', 'oven', 'AC', 'laptop', 'oven', 'AC', 'oven', 'oven' )
Price1 <- c(20, 201, 20, 15, 9, 25, 201, 9, 25, 9, 8 )
PriceN <- c(20, 201, 20, 15, 9, 25, 201, 9, 25, 9, 8)
dat <- data.frame(CustID,TransID, ProductName, Price1, PriceN, stringsAsFactors = FALSE)
library(dplyr)
dat
df %>% group_by(Custid) %>% filter(!duplicated(ProductName, Price1))
df %>% group_by(CustID) %>% filter(!duplicated(ProductName, Price1))
dat %>% group_by(CustID) %>% filter(!duplicated(ProductName, Price1))
head(dat)
dat %>%
group_by(CustID, TransID, ProductName, Price1, PriceN) %>%
head
dat %>%
group_by(CustID, TransID, ProductName, Price1, PriceN) %>%
mutate(counts = n())
dat %>%
group_by(CustID, ProductName, Price1, PriceN) %>%
mutate(counts = n())
dat %>%
group_by(CustID, ProductName, Price1, PriceN) %>%
mutate(counts = row_number())
dat %>%
group_by(CustID, ProductName, Price1, PriceN) %>%
mutate(counts = row_number()) %>%
order(CustID, ProductName, TransID)
dat %>%
group_by(CustID, ProductName, Price1, PriceN) %>%
mutate(counts = row_number()) %>%
order(CustID, ProductName)
dat %>%
group_by(CustID, ProductName, Price1, PriceN) %>%
mutate(counts = row_number()) %>%
arrange(CustID, ProductName)
dat %>%
group_by(CustID, ProductName, Price1, PriceN) %>%
mutate(counts = row_number()) %>%
filter(counts == 1)
install.packages('ISLR')
plot(x = 1)
library(ISLR)
fit <- lm(mpg ~ horsepower, data = Auto)
plot(fit)
summary(fit)
head(Auto)
?Auto
setwd('c:/users/brad/desktop/stat 771/project/project files')
setwd('c:/users/brad/desktop/stat 771/project/projectfiles')
setwd('c:/users/brad/desktop/stat 771/project')
dir()
setwd('c:/users/brad/desktop/stat 771/project/project 771')
setwd('c:/users/brad/desktop/stat 771/project/project771')
dir()
setwd('c:/users/brad/desktop/stat 771/project/project771/project files')
dir()
